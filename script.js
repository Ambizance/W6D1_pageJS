
// --------------------------------------------------------------------------------------------------------------------------------------------


// Fonctionnalit√© 1 :
// On commence par un petit √©chauffement : lorsque l'utilisateur va cliquer sur le footer (portant le tag <footer>), tu vas afficher le mot "clique" en console.

// Cette fonctionnalit√© doit √™tre cod√©e avec un addEventListener("click", function(){ } car c'est une bonne habitude √† prendre ! üòá


//Selection de l'√©l√©ment √† modifier
function function1(){
let footer = document.getElementsByTagName("footer")[0] ;
footer.addEventListener("click", function(){console.log("clique")}) ;
}
// --------------------------------------------------------------------------------------------------------------------------------------------


// Fonctionnalit√© 1-bis :
// Maintenant on va upgrader cette premi√®re fonctionnalit√© : lorsque l'utilisateur va cliquer sur le footer, tu vas afficher en console "clic num√©ro x" avec x qui commence √† 1 et s'incr√©mente de +1 √† chaque clic.

    function function1bis(){
    let footer = document.getElementsByTagName("footer")[0] ;
    let i = 1 ;
    function count_click(){
        console.log("Clique num√©ro : " + i ) ;
        i ++ ;
    }
    footer.addEventListener("click", count_click()) ;    
    }


// --------------------------------------------------------------------------------------------------------------------------------------------

// Fonctionnalit√© 2 :
// On va enfin faire fonctionner ce satan√© "Hamburger Menu" qui s'affiche depuis le d√©but mais qui n'actionne rien quand on clique dessus. C'est quoi un "hamburger menu" ? C'est √ßa, ce bouton avec trois lignes horizontales en haut √† droite de la navbar.
// Tu vas faire que si quelqu'un clique sur ce bouton, l'√©l√©ment HTML portant l'Id navbarHeader perde sa classe collapse. Une fois que √ßa, √ßa marche, fait que si on clique √† nouveau dessus, la classe collapse soit rajout√©e √† nouveau √† l'√©l√©ment portant l'Id navbarHeader

let hamburger = document.getElementsByClassName("navbar-toggler")[0] ; 
console.log(hamburger)
let element = document.getElementById("navbarHeader") ;
console.log(element)
let navbar_status = true ; 
console.log("1")
function delete_collapse(){
    if(navbar_status === false){
        console.log("pass√© par le if")
        element.classList.remove("collapse") ;
        navbar_status = true ; 
        console.log("sort du if")
        console.log("2if")
    }
    else{(navbar_status === true)
        console.log("pass√© par le else")
        element.classList.add("collapse") ;
        navbar_status = false ;
        console.log("sort du else")
        console.log("2else")

    }
}
console.log("3")
hamburger.addEventListener("click", delete_collapse() ) ; 
console.log("4")





// Indice : Il existe une fonction qui permet de rajouter une classe si elle n'est pas d√©j√† pr√©sente et l'enlever si elle est d√©j√† pr√©sente. C'est "toggle". Tu peux l'utiliser ainsi : elementDuDOM.classList.toggle("nomDeLaClasse")

// --------------------------------------------------------------------------------------------------------------------------------------------

// Fonctionnalit√© 3 :
// √Ä pr√©sent, on va faire cela : si on clique sur le bouton "Edit" de la premi√®re card, le texte de la card va se mettre en rouge de fa√ßon irr√©versible (sauf si on recharge la page). √Ä toi de jouer !

// Indice : Commence par bien pointer sur la premi√®re card en entier (stocke-la dans une variable puis affiche-la en console pour confirmer que tu l'as bien point√©).
// Puis pointe vers le bouton Edit de cette card (idem : stocke-le dans une variable et affiche-le en console).
// Une fois que √ßa c'est bien fait, tu peux facilement rajoute un style ="color: red" au texte de la card !

// --------------------------------------------------------------------------------------------------------------------------------------------

// Fonctionnalit√© 4 :
// On va faire quelque chose de similaire √† la fonctionnalit√© 3 mais un peu plus complexe : si on clique sur le bouton "Edit" de la deuxi√®me card, le texte de la card va se mettre en vert. Si on re-clique dessus, il redevient comme avant ! Tu l'as compris, il va falloir que tu cherches comment faire un "toggle" sur le style du texte. C'est plus compliqu√© que sur une classe.

// Indice : Reprend le code de la fonctionnalit√© 3 et adapte-le pour qu'il marche sur la 2√®me card (et en rempla√ßant le rouge par du vert).
// Maintenant, pour le toggle, il va falloir te faire un petit if / else dans ton AddEventListener. On te donne le d√©but :
// if (secondCard.style.color === 'green'){
// secondCard.style.color = '' ;
// }else ‚Ä¶

// --------------------------------------------------------------------------------------------------------------------------------------------

// Fonctionnalit√© 5 :
// Pour le fun, on va impl√©menter une fonctionnalit√© √† la sauce ‚ò¢"nucl√©aire"ü§Ø. Et comme elle est un peu dangereuse, on va la cacher‚Ä¶ Voici comment elle doit marcher : si un utilisateur double clique sur la navbar en haut, tout Bootstrap dispara√Æt et la page s'affiche comme si on avait oubli√© de mettre le CDN qui la relie au fichier CSS. Si possible, rends cette fonctionnalit√© r√©versible (un nouveau double-clic fait tout revenir √† la normale).

// Indice : Cherche sur Google comment d√©sactiver le tag <link> avec JavaScript.

// --------------------------------------------------------------------------------------------------------------------------------------------

